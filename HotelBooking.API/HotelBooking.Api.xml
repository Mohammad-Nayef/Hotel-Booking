<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HotelBooking.Api</name>
    </assembly>
    <members>
        <member name="M:HotelBooking.Api.Controllers.AuthenticationController.PostUserAsync(HotelBooking.Api.Models.User.UserCreationDTO)">
            <summary>
            Create and store a new user.
            </summary>
            <param name="newUser">Properties of the new user.</param>
            <response code="201">Returns the user with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.AuthenticationController.LoginAsync(HotelBooking.Domain.Models.User.UserLoginDTO)">
            <summary>
            Login to an existing user account.
            </summary>
            <response code="200">User is authenticated. Authentication token is returned.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.GetCitiesForAdminAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of cities for an admin.
            </summary>
            <response code="200">The list of cities is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.SearchCitiesForAdminAsync(HotelBooking.Domain.Models.PaginationDTO,System.String)">
            <summary>
            Get paginated list of cities for an admin based on search query.
            </summary>
            <param name="query">The search query</param>
            <response code="200">The list of cities is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.PostCityAsync(HotelBooking.Api.Models.City.CityCreationDTO)">
            <summary>
            Create and store a new city.
            </summary>
            <param name="newCity">Properties of the new city.</param>
            <response code="201">Returns the city with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.DeleteAsync(System.Guid)">
            <summary>
            Delete a city with a specific Id.
            </summary>
            <param name="cityId">The Id of the city to delete.</param>
            <response code="404">The city with the given Id doesn't exist.</response>
            <response code="204">The city is deleted successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.PatchCityAsync(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{HotelBooking.Api.Models.City.CityUpdateDTO})">
            <summary>
            Partially update a specific city.
            </summary>
            <param name="cityId">The Id of the city to update.</param>
            <param name="cityPatchDocument">Patch operations for (Name, CountryName, PostOffice).</param>
            <response code="404">The city with the given Id doesn't exist.</response>
            <response code="204">The city is updated successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.GetHotelsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of hotels for an admin.
            </summary>
            <response code="200">The list of hotels is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.SearchHotelsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO,System.String)">
            <summary>
            Get paginated list of hotels for an admin based on search query.
            </summary>
            <param name="search">The search query</param>
            <response code="200">The list of hotels is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.PostAsync(HotelBooking.Api.Models.Hotel.HotelCreationDTO)">
            <summary>
            Create and store a new hotel.
            </summary>
            <param name="newHotel">Properties of the new hotel.</param>
            <response code="201">Returns the hotel with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.DeleteAsync(System.Guid)">
            <summary>
            Delete a hotel with a specific Id.
            </summary>
            <param name="hotelId">The Id of the hotel to delete.</param>
            <response code="404">The hotel with the given Id doesn't exist.</response>
            <response code="204">The hotel is deleted successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.PatchAsync(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{HotelBooking.Api.Models.Hotel.HotelUpdateDTO})">
            <summary>
            Partially update a specific hotel.
            </summary>
            <param name="hotelId">The Id of the hotel to update.</param>
            <param name="hotelPatchDocument">Patch operations for (Name, OwnerName, Geolocation, CityId)</param>
            <response code="404">The hotel with the given Id doesn't exist.</response>
            <response code="204">The hotel is updated successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.PostDiscountAsync(System.Guid,HotelBooking.Api.Models.Discount.DiscountCreationDTO)">
            <summary>
            Create and store a new discount.
            </summary>
            <param name="hotelId">The Id of the hotel that has the discount.</param>
            <param name="newDiscount">Properties of the new discount.</param>
            <response code="201">Returns the discount with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.GetHotel(System.Guid)">
            <summary>
            Get hotel info by Id.
            </summary>
            <param name="hotelId">Id of the hotel.</param>
            <response code="404">The hotel Id does not exists.</response>
            <response code="200">Returns the requested hotel info.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.GetHotelReviewsAsync(System.Guid,HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of reviews for a specific hotel.
            </summary>
            <param name="hotelId">Id of the hotel to get its reviews.</param>
            <response code="404">The hotel Id does not exists.</response>
            <response code="200">Returns the requested hotel reviews.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.GetFeaturedHotelsAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of featured hotels.
            </summary>
            <response code="200">Returns the list of featured hotels.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.HotelsSearchAsync(HotelBooking.Domain.Models.PaginationDTO,HotelBooking.Domain.Models.Hotel.HotelSearchDTO)">
            <summary>
            Global search method for paginated list of hotels by user.
            </summary>
            <param name="hotelSearch">Search criteria properties.</param>
            <response code="200">Returns the list of relevant hotels.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.GetAvailableRoomsAsync(System.Guid,HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get paginated list of available rooms in an hotel.
            </summary>
            <param name="hotelId">Id of the hotel to get its available rooms.</param>
            <response code="200">Returns the list of available rooms.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageCreationController.PostCityImagesAsync(System.Guid,System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Add images for a city.
            </summary>
            <param name="cityId">Id of the city to add images for.</param>        
            /// <response code="404">The city with the given Id doesn't exist.</response>
            <response code="204">The images are successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageCreationController.PostHotelImagesAsync(System.Guid,System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Add images for a hotel.
            </summary>
            <param name="hotelId">Id of the hotel to add images for.</param>        
            <response code="404">The hotel with the given Id doesn't exist.</response>
            <response code="204">The images are successfully added.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageCreationController.PostRoomImagesAsync(System.Guid,System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Add images for a room.
            </summary>
            <param name="roomId">Id of the room to add images for.</param>        
            <response code="404">The room with the given Id doesn't exist.</response>
            <response code="204">The images are successfully added.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetCityImageAsync(System.Guid)">
             <summary>
             Gets an image for a city by an image Id.
             </summary>
             <param name="imageId">Id of the image to return.</param>
            <response code="200">The image is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetHotelImageAsync(System.Guid)">
             <summary>
             Gets an image for a hotel by an image Id.
             </summary>
             <param name="imageId">Id of the image to return.</param>
            <response code="200">The image is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetRoomImageAsync(System.Guid)">
             <summary>
             Gets an image for a room by an image Id.
             </summary>
             <param name="imageId">Id of the image to return.</param>
            <response code="200">The image is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetThumbnailOfRoomImageAsync(System.Guid)">
             <summary>
             Gets a thumbnail of an image for a room by an image Id.
             </summary>
             <param name="thumbnailId">Id of the image thumbnail to return.</param>
            <response code="200">The thumbnail is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetThumbnailOfHotelImageAsync(System.Guid)">
             <summary>
             Gets a thumbnail of an image for a hotel by a thumbnail Id.
             </summary>
             <param name="thumbnailId">Id of the image thumbnail to return.</param>
            <response code="200">The thumbnail is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetThumbnailOfCityImageAsync(System.Guid)">
             <summary>
             Gets a thumbnail of an image for a city by a thumbnail Id.
             </summary>
             <param name="thumbnailId">Id of the image thumbnail to return.</param>
            <response code="200">The thumbnail is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.GetRoomsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of rooms for an admin.
            </summary>
            <response code="200">The list of rooms is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.SearchRoomsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO,System.String)">
            <summary>
            Get Paginated list of rooms for an admin based on search query.
            </summary>
            <param name="pagination">Pagination parameters</param>
            <param name="query">The search query</param>
            <response code="200">The list of rooms is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.PostAsync(HotelBooking.Api.Models.Room.RoomCreationDTO)">
            <summary>
            Create and store a new room.
            </summary>
            <param name="newRoom">Properties of the new room.</param>
            <response code="201">Returns the room with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.DeleteAsync(System.Guid)">
            <summary>
            Delete a room with a specific Id.
            </summary>
            <param name="roomId">The Id of the room to delete.</param>
            <response code="404">The room with the given Id doesn't exist.</response>
            <response code="204">The room is deleted successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.PatchRoomAsync(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{HotelBooking.Api.Models.Room.RoomUpdateDTO})">
            <summary>
            Partially update a specific room.
            </summary>
            <param name="roomId">The Id of the room to update.</param>
            <param name="roomPatchDocument">Patch operations for (Number, AdultsCapacity, ChildrenCapacity).</param>
            <response code="404">The room with the given Id doesn't exist.</response>
            <response code="204">The room is updated successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.UserController.PostCartItemAsync(HotelBooking.Api.Models.CartItem.CartItemCreationDTO)">
            <summary>
            Create and store a new cart item for a user.
            </summary>
            <param name="userId">The Id of the user that has the cart item.</param>
            <param name="newCartItem">Properties of the new cart item.</param>
            <response code="201">Returns the cart item with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.UserController.GetCartItemsAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of cart items for a user.
            </summary>
            <param name="userId">The Id of the user to get his cart items.</param>
            <response code="200">The list of cart items is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.UserController.PostBookingAsync(HotelBooking.Api.Models.BookingCreationDTO)">
            <summary>
            Create and store a new booking for a user.
            </summary>
            <param name="userId">The Id of the user that has the booking.</param>
            <param name="newBooking">Properties of the new booking.</param>
            <response code="201">The booking is created successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.UserController.PostHotelReviewAsync(HotelBooking.Api.Models.Hotel.HotelReviewCreationDTO)">
            <summary>
            Create and store a new hotel review for a user.
            </summary>
            <param name="userId">The Id of the user creating the review.</param>
            <param name="newReview">Properties of the new review.</param>
            <response code="201">The review is created successfully.</response>
        </member>
    </members>
</doc>
