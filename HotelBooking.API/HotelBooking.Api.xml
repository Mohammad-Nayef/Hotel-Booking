<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HotelBooking.Api</name>
    </assembly>
    <members>
        <member name="M:HotelBooking.Api.Controllers.AuthenticationController.PostUserAsync(HotelBooking.Api.Models.UserCreationDTO)">
            <summary>
            Create and store a new user.
            </summary>
            <param name="newUser">Properties of the new user.</param>
        </member>
        <member name="M:HotelBooking.Api.Controllers.AuthenticationController.LoginAsync(HotelBooking.Domain.Models.User.UserLoginDTO)">
            <summary>
            Login to an existing user account.
            </summary>
            <response code="200">User is authenticated. Authentication token is returned.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.GetCitiesForAdminAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of cities for an admin.
            </summary>
            <response code="200">The list of cities is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.SearchCitiesForAdminAsync(HotelBooking.Domain.Models.PaginationDTO,System.String)">
            <summary>
            Get paginated list of cities for an admin based on search query.
            </summary>
            <param name="query">The search query</param>
            <response code="200">The list of cities is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.PostCityAsync(HotelBooking.Api.Models.City.CityCreationDTO)">
            <summary>
            Create and store a new city.
            </summary>
            <param name="newCity">Properties of the new city.</param>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.DeleteAsync(System.Guid)">
            <summary>
            Delete a city with a specific Id.
            </summary>
            <param name="cityId">The Id of the city to delete.</param>
            <response code="404">The city with the given Id doesn't exist.</response>
            <response code="204">The city is deleted successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityAdminController.PatchCityAsync(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{HotelBooking.Api.Models.City.CityUpdateDTO})">
            <summary>
            Partially update a specific city.
            </summary>
            <param name="cityId">The Id of the city to update.</param>
            <param name="cityPatchDocument">Patch operations for (Name, CountryName, PostOffice).</param>
            <response code="404">The city with the given Id doesn't exist.</response>
            <response code="204">The city is updated successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityUserController.GetPopularCitiesAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of popular cities.
            </summary>
            <response code="200">Returns the list of featured hotels.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.GetHotelsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of hotels for an admin.
            </summary>
            <response code="200">The list of hotels is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.SearchHotelsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO,System.String)">
            <summary>
            Get paginated list of hotels for an admin based on search query.
            </summary>
            <param name="search">The search query</param>
            <response code="200">The list of hotels is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.PostAsync(HotelBooking.Api.Models.Hotel.HotelCreationDTO)">
            <summary>
            Create and store a new hotel.
            </summary>
            <param name="newHotel">Properties of the new hotel.</param>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.DeleteAsync(System.Guid)">
            <summary>
            Delete a hotel with a specific Id.
            </summary>
            <param name="hotelId">The Id of the hotel to delete.</param>
            <response code="404">The hotel with the given Id doesn't exist.</response>
            <response code="204">The hotel is deleted successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.PatchAsync(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{HotelBooking.Api.Models.Hotel.HotelUpdateDTO})">
            <summary>
            Partially update a specific hotel.
            </summary>
            <param name="hotelId">The Id of the hotel to update.</param>
            <param name="hotelPatchDocument">Patch operations for (Name, OwnerName, Geolocation, CityId)</param>
            <response code="404">The hotel with the given Id doesn't exist.</response>
            <response code="204">The hotel is updated successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelAdminController.PostDiscountAsync(System.Guid,HotelBooking.Api.Models.DiscountCreationDTO)">
            <summary>
            Create and store a new discount.
            </summary>
            <param name="hotelId">The Id of the hotel that has the discount.</param>
            <param name="newDiscount">Properties of the new discount.</param>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.GetHotel(System.Guid)">
            <summary>
            Get hotel info by Id.
            </summary>
            <param name="hotelId">Id of the hotel.</param>
            <response code="404">The hotel Id does not exists.</response>
            <response code="200">Returns the requested hotel info.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.GetHotelReviewsAsync(System.Guid,HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of reviews for a specific hotel.
            </summary>
            <param name="hotelId">Id of the hotel to get its reviews.</param>
            <response code="404">The hotel Id does not exists.</response>
            <response code="200">Returns the requested hotel reviews.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.GetFeaturedHotelsAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of featured hotels.
            </summary>
            <response code="200">Returns the list of featured hotels.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.HotelsSearchAsync(HotelBooking.Domain.Models.PaginationDTO,HotelBooking.Domain.Models.Hotel.HotelSearchDTO)">
            <summary>
            Global search method for paginated list of hotels by user.
            </summary>
            <param name="hotelSearch">Search criteria properties.</param>
            <response code="200">Returns the list of relevant hotels.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.GetAvailableRoomsAsync(System.Guid,HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get paginated list of available rooms in an hotel.
            </summary>
            <param name="hotelId">Id of the hotel to get its available rooms.</param>
            <response code="200">Returns the list of available rooms.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelUserController.GetRecentlyVisitedHotelsAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get paginated list of recently visited hotels.
            </summary>
            <response code="200">Returns the list of visited hotels.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageCreationController.PostCityImagesAsync(System.Guid,System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Add images for a city.
            </summary>
            <param name="cityId">Id of the city to add images for.</param>        
            /// <response code="404">The city with the given Id doesn't exist.</response>
            <response code="204">The images are successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageCreationController.PostHotelImagesAsync(System.Guid,System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Add images for a hotel.
            </summary>
            <param name="hotelId">Id of the hotel to add images for.</param>        
            <response code="404">The hotel with the given Id doesn't exist.</response>
            <response code="204">The images are successfully added.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageCreationController.PostRoomImagesAsync(System.Guid,System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Add images for a room.
            </summary>
            <param name="roomId">Id of the room to add images for.</param>        
            <response code="404">The room with the given Id doesn't exist.</response>
            <response code="204">The images are successfully added.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetCityImageAsync(System.Guid)">
             <summary>
             Gets an image for a city by an image Id.
             </summary>
             <param name="imageId">Id of the image to return.</param>
            <response code="200">The image is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetHotelImageAsync(System.Guid)">
             <summary>
             Gets an image for a hotel by an image Id.
             </summary>
             <param name="imageId">Id of the image to return.</param>
            <response code="200">The image is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetRoomImageAsync(System.Guid)">
             <summary>
             Gets an image for a room by an image Id.
             </summary>
             <param name="imageId">Id of the image to return.</param>
            <response code="200">The image is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetThumbnailOfRoomImageAsync(System.Guid)">
             <summary>
             Gets a thumbnail of an image for a room by an image Id.
             </summary>
             <param name="thumbnailId">Id of the image thumbnail to return.</param>
            <response code="200">The thumbnail is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetThumbnailOfHotelImageAsync(System.Guid)">
             <summary>
             Gets a thumbnail of an image for a hotel by a thumbnail Id.
             </summary>
             <param name="thumbnailId">Id of the image thumbnail to return.</param>
            <response code="200">The thumbnail is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.ImageRetrievingController.GetThumbnailOfCityImageAsync(System.Guid)">
             <summary>
             Gets a thumbnail of an image for a city by a thumbnail Id.
             </summary>
             <param name="thumbnailId">Id of the image thumbnail to return.</param>
            <response code="200">The thumbnail is returned successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.GetRoomsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of rooms for an admin.
            </summary>
            <response code="200">The list of rooms is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.SearchRoomsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO,System.String)">
            <summary>
            Get Paginated list of rooms for an admin based on search query.
            </summary>
            <param name="pagination">Pagination parameters</param>
            <param name="query">The search query</param>
            <response code="200">The list of rooms is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.PostAsync(HotelBooking.Api.Models.Room.RoomCreationDTO)">
            <summary>
            Create and store a new room.
            </summary>
            <param name="newRoom">Properties of the new room.</param>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.DeleteAsync(System.Guid)">
            <summary>
            Delete a room with a specific Id.
            </summary>
            <param name="roomId">The Id of the room to delete.</param>
            <response code="404">The room with the given Id doesn't exist.</response>
            <response code="204">The room is deleted successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomAdminController.PatchRoomAsync(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{HotelBooking.Api.Models.Room.RoomUpdateDTO})">
            <summary>
            Partially update a specific room.
            </summary>
            <param name="roomId">The Id of the room to update.</param>
            <param name="roomPatchDocument">Patch operations for (Number, AdultsCapacity, ChildrenCapacity).</param>
            <response code="404">The room with the given Id doesn't exist.</response>
            <response code="204">The room is updated successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.UserController.PostCartItemAsync(HotelBooking.Api.Models.CartItemCreationDTO)">
            <summary>
            Create and store a new cart item for a user.
            </summary>
            <param name="newCartItem">Properties of the new cart item.</param>
        </member>
        <member name="M:HotelBooking.Api.Controllers.UserController.GetCartItemsAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of cart items for a user.
            </summary>
            <response code="200">The list of cart items is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.UserController.PostBookingAsync(HotelBooking.Api.Models.BookingCreationDTO)">
            <summary>
            Create, store a new booking for a user and send an email of its details to the user.
            </summary>
            <param name="newBooking">Properties of the new booking.</param>
        </member>
        <member name="M:HotelBooking.Api.Controllers.UserController.PostHotelReviewAsync(HotelBooking.Api.Models.HotelReviewCreationDTO)">
            <summary>
            Create and store a new hotel review for a user.
            </summary>
            <param name="newReview">Properties of the new review.</param>
            <response code="201">The review is created successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Extensions.ImagesExtensions.ToImages(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Get list of images from list of files.
            </summary>
        </member>
        <member name="M:HotelBooking.Api.Extensions.ResponseHeadersExtensions.AddPaginationMetadata(Microsoft.AspNetCore.Http.IHeaderDictionary,System.Int32,HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Add pagination metadata to the response headers.
            </summary>
        </member>
        <member name="M:HotelBooking.Api.Extensions.SwaggerDependencyInjection.AddSwaggerUi(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register SwaggerUI for documentation.
            </summary>
        </member>
        <member name="M:HotelBooking.Api.Extensions.ValidationExceptionExtensions.GetErrorsForClient(FluentValidation.ValidationException)">
            <summary>
            Get only the necessary errors for the client.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Middlewares.GlobalExceptionHandlingMiddleware">
            <summary>
            Handle any unhandled exception by returning 
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status500InternalServerError"/> without message.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.BookingCreationDTO">
            <summary>
            Model to create new booking.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.BookingCreationDTO.StartingDate">
            <summary>
            Starting time for the booking interval.
            Can't be in the past.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.BookingCreationDTO.EndingDate">
            <summary>
            Ending time for the booking interval.
            Cannot be in the past and must be after StartingDate.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.BookingCreationDTO.RoomId">
            <summary>
            Id of the room for the booking.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.BookingCreationDTO.UserId">
            <summary>
            Id of the user who created the booking.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.CartItemCreationDTO">
            <summary>
            Properties for creating new cart item.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.CartItemCreationDTO.RoomId">
            <summary>
            Id of the room in the cart.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.CartItemCreationDTO.UserId">
            <summary>
            User who added the room to the cart.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.City.CityCreationDTO">
            <summary>
            Properties for creating new city.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.City.CityCreationDTO.Name">
            <summary>
            Name of the city.
            Must be of length between 1 and 100.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.City.CityCreationDTO.CountryName">
            <summary>
            Name of the country that contains the city.
            Must be of length between 1 and 100.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.City.CityCreationDTO.PostOffice">
            <summary>
            Post office of the city.
            Must be of length between 1 and 100.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.City.CityUpdateDTO">
            <summary>
            Model to update city.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.City.CityUpdateDTO.Name">
            <inheritdoc cref="P:HotelBooking.Domain.Models.City.CityDTO.Name"/>
        </member>
        <member name="P:HotelBooking.Api.Models.City.CityUpdateDTO.CountryName">
            <inheritdoc cref="P:HotelBooking.Domain.Models.City.CityDTO.CountryName"/>
        </member>
        <member name="P:HotelBooking.Api.Models.City.CityUpdateDTO.PostOffice">
            <inheritdoc cref="P:HotelBooking.Domain.Models.City.CityDTO.PostOffice"/>
        </member>
        <member name="T:HotelBooking.Api.Models.DiscountCreationDTO">
            <summary>
            Model to create new discount.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.DiscountCreationDTO.Reason">
            <summary>
            Reason of the discount.
            Must be of length between 0 and 200.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.DiscountCreationDTO.StartingDate">
            <summary>
            Starting time for the discount to be applied.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.DiscountCreationDTO.EndingDate">
            <summary>
            Ending time for the discount to be applied.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.DiscountCreationDTO.AmountPercent">
            <summary>
            Amount of the discount.
            Must be between 0 and 100.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.DiscountCreationDTO.HotelId">
            <summary>
            Id of the hotel that has the discount.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.HotelReviewCreationDTO">
            <summary>
            Model for creating new hotel review.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.HotelReviewCreationDTO.Content">
            <summary>
            Textual content of the review.
            Must be of length between 1 and 300.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.HotelReviewCreationDTO.HotelId">
            <summary>
            Id of the hotel that contains the review.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.HotelReviewCreationDTO.UserId">
            <summary>
            Id of the user who created the review.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.Hotel.HotelCreationDTO">
            <summary>
            Model for creating new hotel.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelCreationDTO.Name">
            <summary>
            Name of the hotel.
            Must be of length between 1 and 100.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelCreationDTO.BriefDescription">
            <summary>
            Small summary about the hotel.
            Must be of length between 1 and 150
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelCreationDTO.FullDescription">
            <summary>
            Detailed description about the hotel.
            Must be of length between 1 and 2000.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelCreationDTO.StarRating">
            <summary>
            Star rating of the hotel.
            Must be of length between 1 and 5.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelCreationDTO.OwnerName">
            <summary>
            Name of the owner of the hotel.
            Can contain multiple separated names in case of multiple owners.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelCreationDTO.Geolocation">
            <summary>
            Geolocation coordinates of the hotel in the format "latitude, longitude".
            Latitude and longitude are expressed as decimal numbers separated by a comma. 
            Example: "37.7749, -122.4194". It must match: 
            ^((\-?|\+?)?\d+(\.\d+)?),\s*((\-?|\+?)?\d+(\.\d+)?)$
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelCreationDTO.CityId">
            <summary>
            Id of the city that contains the hotel.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.Hotel.HotelUpdateDTO">
            <summary>
            Model to update hotel.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelUpdateDTO.Name">
            <summary>
            Name of the hotel.
            Must be of length between 1 and 100.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelUpdateDTO.OwnerName">
            <summary>
            Name of the owner of the hotel.
            Can contain multiple separated names in case of multiple owners.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelUpdateDTO.Geolocation">
            <summary>
            Geolocation coordinates of the hotel in the format "latitude, longitude".
            Latitude and longitude are expressed as decimal numbers separated by a comma. 
            Example: "37.7749, -122.4194". It must match: 
            ^((\-?|\+?)?\d+(\.\d+)?),\s*((\-?|\+?)?\d+(\.\d+)?)$
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Hotel.HotelUpdateDTO.CityId">
            <summary>
            Id of the city that contains the hotel.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.PaginationMetadataDTO">
            <summary>
            Metadata of an applied pagination.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.Room.RoomCreationDTO">
            <summary>
            Model for creating new room.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomCreationDTO.Number">
            <summary>
            Number of the room which is identified by the hotel.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomCreationDTO.Type">
            <summary>
            Type of the room.
            Must be of length between 1 and 50.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomCreationDTO.AdultsCapacity">
            <summary>
            Maximum number of adults the room can accommodate.
            Must be between 0 and 50.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomCreationDTO.ChildrenCapacity">
            <summary>
            Maximum number of children the room can accommodate.
            Must be between 0 and 50
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomCreationDTO.BriefDescription">
            <summary>
            Small summary about the room.
            Must be of length between 1 and 150.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomCreationDTO.PricePerNight">
            <summary>
            Price of booking the room for a single day.
            Must not be negative.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomCreationDTO.HotelId">
            <summary>
            Id of the hotel that contains the room.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.Room.RoomUpdateDTO">
            <summary>
            Model to update room.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomUpdateDTO.Number">
            <summary>
            Number of the room which is identified by the hotel.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomUpdateDTO.AdultsCapacity">
            <summary>
            Maximum number of adults the room can accommodate.
            Must be between 0 and 50.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.Room.RoomUpdateDTO.ChildrenCapacity">
            <summary>
            Maximum number of children the room can accommodate.
            Must be between 0 and 50
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.UserCreationDTO">
            <summary>
            Model to create new user.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.UserCreationDTO.FirstName">
            <summary>
            First name of the user.
            Must be of length between 3 and 50. It must match: ^[A-Za-z\s]+$
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.UserCreationDTO.LastName">
            <summary>
            Last name of the user.
            Must be of length between 3 and 50. It must match: ^[A-Za-z\s]+$
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.UserCreationDTO.Email">
            <summary>
            Email of the user.
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.UserCreationDTO.Username">
            <summary>
            Username of the user.
            Must be unique and of length between 3 and 50. It must match: ^[\w]+$
            </summary>
        </member>
        <member name="P:HotelBooking.Api.Models.UserCreationDTO.Password">
            <summary>
            Password of the user.
            Must be of length between 8 and 50.
            </summary>
        </member>
        <member name="T:HotelBooking.Api.Models.ValidationResultDTO">
            <summary>
            Hold properties to show for the client.
            </summary>
        </member>
    </members>
</doc>
