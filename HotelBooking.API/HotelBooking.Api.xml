<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HotelBooking.Api</name>
    </assembly>
    <members>
        <member name="M:HotelBooking.Api.Controllers.AdminController.GetCitiesForAdminAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of cities for an admin.
            </summary>
            <response code="200">The list of cities is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.AdminController.GetHotelsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of hotels for an admin.
            </summary>
            <response code="200">The list of hotels is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.AdminController.GetRoomsForAdminAsync(HotelBooking.Domain.Models.PaginationDTO)">
            <summary>
            Get a paginated list of rooms for an admin.
            </summary>
            <response code="200">The list of rooms is retrieved successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityController.PostCityAsync(HotelBooking.Api.Models.CityCreationDTO)">
            <summary>
            Create and store a new city.
            </summary>
            <param name="newCity">Properties of the new city.</param>
            <response code="201">Returns the city with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityController.DeleteAsync(System.Guid)">
            <summary>
            Delete a city with a specific Id.
            </summary>
            <param name="cityId">The Id of the city to delete.</param>
            <response code="404">The city with the given Id doesn't exist.</response>
            <response code="204">The city is deleted successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.CityController.PatchCityAsync(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{HotelBooking.Api.Models.CityUpdateDTO})">
            <summary>
            Partially update a specific city.
            </summary>
            <param name="cityId">The Id of the city to update.</param>
            <param name="cityPatchDocument">Patch operations for (Name, CountryName, PostOffice).</param>
            <response code="404">The city with the given Id doesn't exist.</response>
            <response code="204">The city is updated successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelController.PostAsync(HotelBooking.Api.Models.HotelCreationDTO)">
            <summary>
            Create and store a new hotel.
            </summary>
            <param name="newHotel">Properties of the new hotel.</param>
            <response code="201">Returns the hotel with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelController.DeleteAsync(System.Guid)">
            <summary>
            Delete a hotel with a specific Id.
            </summary>
            <param name="hotelId">The Id of the hotel to delete.</param>
            <response code="404">The hotel with the given Id doesn't exist.</response>
            <response code="204">The hotel is deleted successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelController.PatchAsync(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{HotelBooking.Api.Models.HotelUpdateDTO})">
            <summary>
            Partially update a specific hotel.
            </summary>
            <param name="hotelId">The Id of the hotel to update.</param>
            <param name="hotelPatchDocument">Patch operations for (Name, OwnerName, Geolocation, CityId)</param>
            <response code="404">The hotel with the given Id doesn't exist.</response>
            <response code="204">The hotel is updated successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.HotelController.PostDiscountAsync(System.Guid,HotelBooking.Api.Models.DiscountCreationDTO)">
            <summary>
            Create and store a new discount.
            </summary>
            <param name="hotelId">The Id of the hotel that has the discount.</param>
            <param name="newDiscount">Properties of the new discount.</param>
            <response code="201">Returns the discount with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomController.PostAsync(HotelBooking.Api.Models.RoomCreationDTO)">
            <summary>
            Create and store a new room.
            </summary>
            <param name="newRoom">Properties of the new room.</param>
            <response code="201">Returns the room with a new Id and its URI in response headers.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomController.DeleteAsync(System.Guid)">
            <summary>
            Delete a room with a specific Id.
            </summary>
            <param name="roomId">The Id of the room to delete.</param>
            <response code="404">The room with the given Id doesn't exist.</response>
            <response code="204">The room is deleted successfully.</response>
        </member>
        <member name="M:HotelBooking.Api.Controllers.RoomController.PatchRoomAsync(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{HotelBooking.Api.Models.RoomUpdateDTO})">
            <summary>
            Partially update a specific room.
            </summary>
            <param name="roomId">The Id of the room to update.</param>
            <param name="roomPatchDocument">Patch operations for (Number, AdultsCapacity, ChildrenCapacity).</param>
            <response code="404">The room with the given Id doesn't exist.</response>
            <response code="204">The room is updated successfully.</response>
        </member>
    </members>
</doc>
