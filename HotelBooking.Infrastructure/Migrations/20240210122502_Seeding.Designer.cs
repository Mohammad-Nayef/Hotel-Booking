// <auto-generated />
using System;
using HotelBooking.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBooking.Infrastructure.Migrations
{
    [DbContext(typeof(HotelsBookingDbContext))]
    [Migration("20240210122502_Seeding")]
    partial class Seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBooking.Domain.Models.City.CityForAdminDTO", b =>
                {
                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfHotels")
                        .HasColumnType("int");

                    b.Property<string>("PostOffice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vw_CitiesForAdmin", (string)null);
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Hotel.HotelForAdminDTO", b =>
                {
                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("StarRating")
                        .HasColumnType("real");

                    b.ToTable((string)null);

                    b.ToView("vw_HotelsForAdmin", (string)null);
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Room.RoomForAdminDTO", b =>
                {
                    b.Property<int>("AdultsCapacity")
                        .HasColumnType("int");

                    b.Property<int>("ChildrenCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Number")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vw_RoomsForAdmin", (string)null);
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.BookingTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92c48f96-7fc1-44b7-4d4d-08dc29aef958"),
                            CreationDate = new DateTime(2024, 2, 9, 20, 37, 46, 374, DateTimeKind.Unspecified).AddTicks(4945),
                            EndingDate = new DateTime(2024, 2, 20, 20, 35, 50, 160, DateTimeKind.Unspecified),
                            Price = 570.00m,
                            RoomId = new Guid("28e17d69-9e0e-44a3-2947-08dc29a4de37"),
                            StartingDate = new DateTime(2024, 2, 9, 20, 35, 50, 160, DateTimeKind.Unspecified),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("a5198671-9494-427e-699a-08dc29af9712"),
                            CreationDate = new DateTime(2024, 2, 9, 20, 42, 10, 907, DateTimeKind.Unspecified).AddTicks(4496),
                            EndingDate = new DateTime(2024, 4, 20, 20, 35, 50, 160, DateTimeKind.Unspecified),
                            Price = 2042.50m,
                            RoomId = new Guid("28e17d69-9e0e-44a3-2947-08dc29a4de37"),
                            StartingDate = new DateTime(2024, 3, 9, 20, 35, 50, 160, DateTimeKind.Unspecified),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("84a82828-e978-4264-699b-08dc29af9712"),
                            CreationDate = new DateTime(2024, 2, 9, 20, 46, 39, 214, DateTimeKind.Unspecified).AddTicks(1140),
                            EndingDate = new DateTime(2024, 4, 20, 20, 35, 50, 160, DateTimeKind.Unspecified),
                            Price = 3063.75m,
                            RoomId = new Guid("b3f07752-2d97-4b2c-2949-08dc29a4de37"),
                            StartingDate = new DateTime(2024, 3, 9, 20, 35, 50, 160, DateTimeKind.Unspecified),
                            UserId = new Guid("5f827131-b075-4fca-b35f-74e2957f5525")
                        },
                        new
                        {
                            Id = new Guid("3d027397-3903-4613-699c-08dc29af9712"),
                            CreationDate = new DateTime(2024, 2, 9, 20, 48, 48, 607, DateTimeKind.Unspecified).AddTicks(6872),
                            EndingDate = new DateTime(2024, 12, 20, 20, 35, 50, 160, DateTimeKind.Unspecified),
                            Price = 16102.50m,
                            RoomId = new Guid("b3f07752-2d97-4b2c-2949-08dc29a4de37"),
                            StartingDate = new DateTime(2024, 5, 9, 20, 35, 50, 160, DateTimeKind.Unspecified),
                            UserId = new Guid("5f827131-b075-4fca-b35f-74e2957f5525")
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.CartItemTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddingDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.CityTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostOffice")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("06f823bf-7b05-4953-4160-08dc299de452"),
                            CountryName = "France",
                            CreationDate = new DateTime(2024, 2, 9, 18, 36, 25, 836, DateTimeKind.Unspecified).AddTicks(2319),
                            ModificationDate = new DateTime(2024, 2, 9, 18, 57, 18, 435, DateTimeKind.Unspecified).AddTicks(4543),
                            Name = "Paris",
                            PostOffice = "string"
                        },
                        new
                        {
                            Id = new Guid("bc007ecd-4c13-4f90-4161-08dc299de452"),
                            CountryName = "UK",
                            CreationDate = new DateTime(2024, 2, 9, 18, 38, 22, 85, DateTimeKind.Unspecified).AddTicks(4140),
                            ModificationDate = new DateTime(2024, 2, 9, 18, 38, 22, 85, DateTimeKind.Unspecified).AddTicks(4143),
                            Name = "London",
                            PostOffice = "string"
                        },
                        new
                        {
                            Id = new Guid("8781a4f1-7d9a-4081-4162-08dc299de452"),
                            CountryName = "USA",
                            CreationDate = new DateTime(2024, 2, 9, 18, 38, 32, 755, DateTimeKind.Unspecified).AddTicks(1763),
                            ModificationDate = new DateTime(2024, 2, 9, 18, 38, 32, 755, DateTimeKind.Unspecified).AddTicks(1766),
                            Name = "New York",
                            PostOffice = "string"
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.DiscountTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("AmountPercent")
                        .HasColumnType("real");

                    b.Property<DateTime>("EndingDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EndingDate");

                    b.HasIndex("HotelId");

                    b.HasIndex("StartingDate");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("294d2a20-6ac6-45b1-40c0-08dc29a25c37"),
                            AmountPercent = 5f,
                            EndingDate = new DateTime(2024, 3, 9, 19, 6, 19, 661, DateTimeKind.Unspecified),
                            HotelId = new Guid("931ed0df-7b97-453d-1267-08dc29a09a1f"),
                            Reason = "New season",
                            StartingDate = new DateTime(2024, 2, 9, 19, 6, 19, 661, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2e634c0c-f29b-4eed-40c1-08dc29a25c37"),
                            AmountPercent = 10f,
                            EndingDate = new DateTime(2024, 3, 9, 19, 6, 19, 661, DateTimeKind.Unspecified),
                            HotelId = new Guid("931ed0df-7b97-453d-1267-08dc29a09a1f"),
                            Reason = "New season",
                            StartingDate = new DateTime(2024, 2, 20, 19, 6, 19, 661, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("75aef3a5-5f6a-48ea-40c2-08dc29a25c37"),
                            AmountPercent = 10f,
                            EndingDate = new DateTime(2024, 3, 9, 19, 6, 19, 661, DateTimeKind.Unspecified),
                            HotelId = new Guid("b7535eac-a5b4-49bb-1269-08dc29a09a1f"),
                            Reason = "New season",
                            StartingDate = new DateTime(2024, 2, 9, 19, 6, 19, 661, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7ce31ec2-eb7c-4010-40c3-08dc29a25c37"),
                            AmountPercent = 5f,
                            EndingDate = new DateTime(2024, 3, 9, 19, 6, 19, 661, DateTimeKind.Unspecified),
                            HotelId = new Guid("b7535eac-a5b4-49bb-1269-08dc29a09a1f"),
                            Reason = "New season",
                            StartingDate = new DateTime(2024, 2, 20, 19, 6, 19, 661, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.HotelReviewTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("HotelReviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10c38d30-f6f1-4e17-ec5d-08dc29ae8167"),
                            Content = "Not bad",
                            CreationDate = new DateTime(2024, 2, 9, 20, 34, 25, 182, DateTimeKind.Unspecified).AddTicks(8004),
                            HotelId = new Guid("931ed0df-7b97-453d-1267-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.HotelTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BriefDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Geolocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("StarRating")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("931ed0df-7b97-453d-1267-08dc29a09a1f"),
                            BriefDescription = "A 4-star hotel located above Tower Hill Underground Station.",
                            CityId = new Guid("bc007ecd-4c13-4f90-4161-08dc299de452"),
                            CreationDate = new DateTime(2024, 2, 9, 18, 54, 53, 685, DateTimeKind.Unspecified).AddTicks(569),
                            FullDescription = "Experience luxury and convenience at citizenM Tower of London, located above Tower Hill Underground Station. Enjoy stunning views of the Thames, Tower of London, and Tower Bridge from our 370 rooms. With 24/7 food and beverage service, free super-fast WiFi, and room controls via iPad or our app, your stay will be unforgettable.",
                            Geolocation = "51.510223410295524,-0.07644353237381915",
                            ModificationDate = new DateTime(2024, 2, 9, 20, 45, 21, 12, DateTimeKind.Unspecified).AddTicks(2021),
                            Name = "citizenM Tower Of London hotel",
                            OwnerName = "citizenM",
                            StarRating = 4f
                        },
                        new
                        {
                            Id = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            BriefDescription = "A 4-star hotel offering panoramic views of Paris.",
                            CityId = new Guid("06f823bf-7b05-4953-4160-08dc299de452"),
                            CreationDate = new DateTime(2024, 2, 9, 18, 56, 58, 173, DateTimeKind.Unspecified).AddTicks(3565),
                            FullDescription = "The 4-star Pullman Paris Tour Eiffel hotel offers contemporary guest rooms with panoramic views of Paris, some with stunning views of the Eiffel Tower or the garden. Enjoy Californian-style cuisine with French flavours at the hotel's restaurant, Frame, or dine on the terrace. A fitness room with cardio equipment is open 24 hours a day.",
                            Geolocation = "48.85567419020331, 2.2928680490125637",
                            ModificationDate = new DateTime(2024, 2, 9, 18, 56, 58, 173, DateTimeKind.Unspecified).AddTicks(3570),
                            Name = "Pullman Paris Tour Eiffel",
                            OwnerName = "Pullman",
                            StarRating = 4.4f
                        },
                        new
                        {
                            Id = new Guid("b7535eac-a5b4-49bb-1269-08dc29a09a1f"),
                            BriefDescription = "A 4-star hotel in the heart of Times Square.",
                            CityId = new Guid("8781a4f1-7d9a-4081-4162-08dc299de452"),
                            CreationDate = new DateTime(2024, 2, 9, 19, 3, 10, 588, DateTimeKind.Unspecified).AddTicks(5700),
                            FullDescription = "Stay in the heart of Times Square at our hotel with panoramic views from oversized guestrooms and sky-level restaurant. Enjoy Broadway's iconic theaters, shopping, and restaurants just outside the door.",
                            Geolocation = "40.7566480079687, -73.98881546193508",
                            ModificationDate = new DateTime(2024, 2, 9, 19, 3, 10, 588, DateTimeKind.Unspecified).AddTicks(5704),
                            Name = "Hilton New York Times Square",
                            OwnerName = "Hilton",
                            StarRating = 4.2f
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.HotelVisitTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("HotelVisits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccba8bfb-c2a0-4f21-bd38-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 2, 4, 360, DateTimeKind.Unspecified).AddTicks(5808),
                            HotelId = new Guid("931ed0df-7b97-453d-1267-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("5341a728-6bf3-4816-bd39-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 16, 14, 575, DateTimeKind.Unspecified).AddTicks(9097),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("023f241b-884e-46aa-bd3a-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 16, 16, 779, DateTimeKind.Unspecified).AddTicks(62),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("5bf50598-4354-4bc5-bd3b-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 16, 17, 211, DateTimeKind.Unspecified).AddTicks(2413),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("e4fe58fb-ccd0-46a2-bd3c-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 16, 17, 561, DateTimeKind.Unspecified).AddTicks(2381),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("9d49c69c-d98f-4ac9-bd3d-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 16, 17, 717, DateTimeKind.Unspecified).AddTicks(4073),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("2537d5a5-c173-4d42-bd3e-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 16, 18, 15, DateTimeKind.Unspecified).AddTicks(8790),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("de5574fb-8e28-4431-bd3f-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 16, 18, 199, DateTimeKind.Unspecified).AddTicks(4640),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("7baa02ac-e3ab-46e0-bd40-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 16, 18, 384, DateTimeKind.Unspecified).AddTicks(4805),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        },
                        new
                        {
                            Id = new Guid("5f84e84f-a559-479f-bd41-08dc29a9fc95"),
                            Date = new DateTime(2024, 2, 9, 20, 16, 19, 31, DateTimeKind.Unspecified).AddTicks(2782),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            UserId = new Guid("6198dc72-410c-48e6-9253-08dc29a983e6")
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.ImageTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.RoleTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.RoomTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdultsCapacity")
                        .HasColumnType("int");

                    b.Property<string>("BriefDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ChildrenCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Number")
                        .HasColumnType("float");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28e17d69-9e0e-44a3-2947-08dc29a4de37"),
                            AdultsCapacity = 2,
                            BriefDescription = "Some text",
                            ChildrenCapacity = 3,
                            CreationDate = new DateTime(2024, 2, 9, 19, 25, 25, 924, DateTimeKind.Unspecified).AddTicks(4730),
                            HotelId = new Guid("931ed0df-7b97-453d-1267-08dc29a09a1f"),
                            ModificationDate = new DateTime(2024, 2, 9, 19, 25, 25, 924, DateTimeKind.Unspecified).AddTicks(5743),
                            Number = 1.0,
                            PricePerNight = 50.00m,
                            Type = "Family"
                        },
                        new
                        {
                            Id = new Guid("a914be7e-c545-4784-2948-08dc29a4de37"),
                            AdultsCapacity = 2,
                            BriefDescription = "Some text",
                            ChildrenCapacity = 0,
                            CreationDate = new DateTime(2024, 2, 9, 19, 25, 46, 76, DateTimeKind.Unspecified).AddTicks(2941),
                            HotelId = new Guid("931ed0df-7b97-453d-1267-08dc29a09a1f"),
                            ModificationDate = new DateTime(2024, 2, 9, 19, 25, 46, 76, DateTimeKind.Unspecified).AddTicks(2945),
                            Number = 2.0,
                            PricePerNight = 100.00m,
                            Type = "Luxury"
                        },
                        new
                        {
                            Id = new Guid("b3f07752-2d97-4b2c-2949-08dc29a4de37"),
                            AdultsCapacity = 3,
                            BriefDescription = "Some text",
                            ChildrenCapacity = 2,
                            CreationDate = new DateTime(2024, 2, 9, 19, 26, 3, 594, DateTimeKind.Unspecified).AddTicks(2376),
                            HotelId = new Guid("931ed0df-7b97-453d-1267-08dc29a09a1f"),
                            ModificationDate = new DateTime(2024, 2, 9, 19, 26, 3, 594, DateTimeKind.Unspecified).AddTicks(2379),
                            Number = 3.0,
                            PricePerNight = 75.00m,
                            Type = "Average"
                        },
                        new
                        {
                            Id = new Guid("f15bd95c-8746-4236-294a-08dc29a4de37"),
                            AdultsCapacity = 3,
                            BriefDescription = "Some text",
                            ChildrenCapacity = 2,
                            CreationDate = new DateTime(2024, 2, 9, 19, 26, 22, 383, DateTimeKind.Unspecified).AddTicks(9118),
                            HotelId = new Guid("b7535eac-a5b4-49bb-1269-08dc29a09a1f"),
                            ModificationDate = new DateTime(2024, 2, 9, 19, 26, 22, 383, DateTimeKind.Unspecified).AddTicks(9124),
                            Number = 3.0,
                            PricePerNight = 75.00m,
                            Type = "Average"
                        },
                        new
                        {
                            Id = new Guid("e8a1a3e6-d8da-4928-294b-08dc29a4de37"),
                            AdultsCapacity = 2,
                            BriefDescription = "Some text",
                            ChildrenCapacity = 0,
                            CreationDate = new DateTime(2024, 2, 9, 19, 26, 39, 972, DateTimeKind.Unspecified).AddTicks(3640),
                            HotelId = new Guid("b7535eac-a5b4-49bb-1269-08dc29a09a1f"),
                            ModificationDate = new DateTime(2024, 2, 9, 19, 26, 39, 972, DateTimeKind.Unspecified).AddTicks(3645),
                            Number = 2.0,
                            PricePerNight = 100.00m,
                            Type = "Luxury"
                        },
                        new
                        {
                            Id = new Guid("b3f52184-3330-4750-294c-08dc29a4de37"),
                            AdultsCapacity = 2,
                            BriefDescription = "Some text",
                            ChildrenCapacity = 3,
                            CreationDate = new DateTime(2024, 2, 9, 19, 26, 58, 930, DateTimeKind.Unspecified).AddTicks(8602),
                            HotelId = new Guid("b7535eac-a5b4-49bb-1269-08dc29a09a1f"),
                            ModificationDate = new DateTime(2024, 2, 9, 19, 26, 58, 930, DateTimeKind.Unspecified).AddTicks(8604),
                            Number = 1.0,
                            PricePerNight = 50.00m,
                            Type = "Family"
                        },
                        new
                        {
                            Id = new Guid("f339b369-2a05-4eea-294d-08dc29a4de37"),
                            AdultsCapacity = 2,
                            BriefDescription = "Some text",
                            ChildrenCapacity = 3,
                            CreationDate = new DateTime(2024, 2, 9, 19, 27, 15, 270, DateTimeKind.Unspecified).AddTicks(8419),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            ModificationDate = new DateTime(2024, 2, 9, 19, 27, 15, 270, DateTimeKind.Unspecified).AddTicks(8421),
                            Number = 1.0,
                            PricePerNight = 50.00m,
                            Type = "Family"
                        },
                        new
                        {
                            Id = new Guid("601a0d84-0435-4221-294e-08dc29a4de37"),
                            AdultsCapacity = 2,
                            BriefDescription = "Some text",
                            ChildrenCapacity = 0,
                            CreationDate = new DateTime(2024, 2, 9, 19, 27, 28, 669, DateTimeKind.Unspecified).AddTicks(1979),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            ModificationDate = new DateTime(2024, 2, 9, 19, 27, 28, 669, DateTimeKind.Unspecified).AddTicks(1982),
                            Number = 2.0,
                            PricePerNight = 100.00m,
                            Type = "Luxury"
                        },
                        new
                        {
                            Id = new Guid("3914316b-1b87-46f7-294f-08dc29a4de37"),
                            AdultsCapacity = 2,
                            BriefDescription = "Some text",
                            ChildrenCapacity = 2,
                            CreationDate = new DateTime(2024, 2, 9, 19, 27, 43, 963, DateTimeKind.Unspecified).AddTicks(7468),
                            HotelId = new Guid("98123ca9-624e-4743-1268-08dc29a09a1f"),
                            ModificationDate = new DateTime(2024, 2, 9, 19, 27, 43, 963, DateTimeKind.Unspecified).AddTicks(7475),
                            Number = 3.0,
                            PricePerNight = 75.00m,
                            Type = "Average"
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.UserTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UsersRoles", b =>
                {
                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.BookingTable", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Tables.RoomTable", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking.Infrastructure.Tables.UserTable", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.CartItemTable", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Tables.RoomTable", "Room")
                        .WithMany("CartItems")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking.Infrastructure.Tables.UserTable", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.DiscountTable", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Tables.HotelTable", "Hotel")
                        .WithMany("Discounts")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.HotelReviewTable", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Tables.HotelTable", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking.Infrastructure.Tables.UserTable", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.HotelTable", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Tables.CityTable", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.HotelVisitTable", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Tables.HotelTable", "Hotel")
                        .WithMany("Visits")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking.Infrastructure.Tables.UserTable", "User")
                        .WithMany("Visits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.RoomTable", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Tables.HotelTable", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("UsersRoles", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Tables.RoleTable", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking.Infrastructure.Tables.UserTable", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.CityTable", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.HotelTable", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.RoomTable", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Tables.UserTable", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("CartItems");

                    b.Navigation("Reviews");

                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
